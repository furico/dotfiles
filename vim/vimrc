scriptencoding utf-8
" Init {{{
function! s:add_bundle_path()
  let l:files = globpath(expand("~/.vim/bundle"), "*")
  for path in split(l:files, "\n")
    if isdirectory(path)
      execute "set rtp+=".path
    endif
    let l:after = path . "/after"
    if isdirectory(l:after)
      execute "set rtp+=".l:after
    endif
  endfor
endfunction
if has("vim_starting")
  call s:add_bundle_path()
endif
" }}}
" Basic {{{
set hidden
set modelines=1
set clipboard+=unnamed
set belloff=all
" }}}
" Searching {{{
set hlsearch
set ignorecase
set smartcase
set incsearch
" }}}
" Backups {{{
set nobackup
set nowritebackup
set noswapfile
set noundofile
" }}}
" Spaces & Tabs {{{
set shiftwidth=2
set tabstop=2
set expandtab
" }}}
" UI {{{
set number
set showcmd
set list lcs=eol:$,tab:>-
set laststatus=2
set cmdheight=2
set statusline=%r%w%f%m%=[%{&fileformat}][%{&fileencoding}]%y[%3p%%][%3l:%-3c]
" }}}
" Colors {{{
set background=light
colorscheme PaperColor
" }}}
" Keymaps {{{
let mapleader = "\<Space>"
nnoremap Y y$
noremap <C-CR> o<Esc>
nnoremap <silent> <Leader>w :update<CR>
nnoremap <silent> <Leader>n :enew<CR>
nnoremap <silent> <Esc><Esc> :nohlsearch<CR>
nnoremap <Tab> <C-w><C-w>
nnoremap <S-Tab> <C-w>W
nnoremap <silent> j gj
nnoremap <silent> gj j
nnoremap <silent> k gk
nnoremap <silent> gk k
nnoremap <silent> <C-n> :bn<CR>
nnoremap <silent> <C-p> :bp<CR>
nnoremap <silent> <Leader>d :bd<CR>
nnoremap <silent> <Leader>dd :bd!<CR>
" }}}
" Auto Commands {{{
augroup MyVimrc
  autocmd!
  autocmd FileType vim call s:setting_for_vim()
augroup END

function! s:setting_for_vim()
  nnoremap <buffer> <Leader>r :so%<CR>
endfunction
" }}}
" vim:foldmethod=marker
